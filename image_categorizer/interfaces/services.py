from abc import ABC, abstractmethod
from pathlib import Path
from typing import Optional

class ICategoryService(ABC):
    @abstractmethod
    def get_categories(self) -> list[str]: ...
    @abstractmethod
    def add_category(self, name: str) -> None: ...
    @abstractmethod
    def delete_category(self, name: str) -> bool: ...

class IImageService(ABC):
    @abstractmethod
    def has_images(self) -> bool: ...
    @abstractmethod
    def current_image(self) -> Optional[Path]: ...
    @abstractmethod
    def advance_to_first(self) -> None: ...
    @abstractmethod
    def move_current_to_category(self, category: str) -> None: ...
